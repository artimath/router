/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/root'
import { Route as layoutFirstLayoutImport } from './routes/layout/first-layout'
import { Route as postsPostsImport } from './routes/posts/posts'
import { Route as homeImport } from './routes/home'
import { Route as layoutSecondLayoutImport } from './routes/layout/second-layout'
import { Route as postsPostsDetailImport } from './routes/posts/posts-detail'
import { Route as postsPostsHomeImport } from './routes/posts/posts-home'
import { Route as bImport } from './routes/b'
import { Route as aImport } from './routes/a'

// Create/Update Routes

const layoutFirstLayoutRoute = layoutFirstLayoutImport.update({
  id: '/_first',
  getParentRoute: () => rootRoute,
} as any)

const postsPostsRoute = postsPostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const homeRoute = homeImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const layoutSecondLayoutRoute = layoutSecondLayoutImport.update({
  id: '/_second',
  getParentRoute: () => layoutFirstLayoutRoute,
} as any)

const postsPostsDetailRoute = postsPostsDetailImport.update({
  path: '/$postId',
  getParentRoute: () => postsPostsRoute,
} as any)

const postsPostsHomeRoute = postsPostsHomeImport.update({
  path: '/',
  getParentRoute: () => postsPostsRoute,
} as any)

const bRoute = bImport.update({
  path: '/layout-b',
  getParentRoute: () => layoutSecondLayoutRoute,
} as any)

const aRoute = aImport.update({
  path: '/layout-a',
  getParentRoute: () => layoutSecondLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof postsPostsImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof postsPostsHomeImport
      parentRoute: typeof postsPostsImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof postsPostsDetailImport
      parentRoute: typeof postsPostsImport
    }
    '/_first': {
      id: '/_first'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutFirstLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_first/_second': {
      id: '/_first/_second'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutSecondLayoutImport
      parentRoute: typeof layoutFirstLayoutImport
    }
    '/_first/_second/layout-a': {
      id: '/_first/_second/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof aImport
      parentRoute: typeof layoutSecondLayoutImport
    }
    '/_first/_second/layout-b': {
      id: '/_first/_second/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof bImport
      parentRoute: typeof layoutSecondLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  homeRoute,
  postsPostsRoute: postsPostsRoute.addChildren({
    postsPostsHomeRoute,
    postsPostsDetailRoute,
  }),
  layoutFirstLayoutRoute: layoutFirstLayoutRoute.addChildren({
    layoutSecondLayoutRoute: layoutSecondLayoutRoute.addChildren({
      aRoute,
      bRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "root.tsx",
      "children": [
        "/",
        "/posts",
        "/_first"
      ]
    },
    "/": {
      "filePath": "home.tsx"
    },
    "/posts": {
      "filePath": "posts/posts.tsx",
      "children": [
        "/posts/",
        "/posts/$postId"
      ]
    },
    "/posts/": {
      "filePath": "posts/posts-home.tsx",
      "parent": "/posts"
    },
    "/posts/$postId": {
      "filePath": "posts/posts-detail.tsx",
      "parent": "/posts"
    },
    "/_first": {
      "filePath": "layout/first-layout.tsx",
      "children": [
        "/_first/_second"
      ]
    },
    "/_first/_second": {
      "filePath": "layout/second-layout.tsx",
      "parent": "/_first",
      "children": [
        "/_first/_second/layout-a",
        "/_first/_second/layout-b"
      ]
    },
    "/_first/_second/layout-a": {
      "filePath": "a.tsx",
      "parent": "/_first/_second"
    },
    "/_first/_second/layout-b": {
      "filePath": "b.tsx",
      "parent": "/_first/_second"
    }
  }
}
ROUTE_MANIFEST_END */
